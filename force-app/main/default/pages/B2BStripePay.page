<apex:page applyBodyTag="false" applyHtmlTag="false" showHeader="false" sidebar="false">
    <html>

    <head>
        <script type="text/javascript" src="https://js.stripe.com/v3/"></script>
        <script>
            window.onload = onLoad;
            var cardElement;
            var stripe;
            var elements;
            var cardWrapper;
            async function onLoad() {
                cardWrapper = document.querySelector("div.cardWrapper");
                stripe = await Stripe('{!$CurrentPage.parameters.pKey}');
                elements = stripe.elements();
                const style = {
                    style: {
                        base: {
                        iconColor: '#c4f0ff',
                        color: '#fff',
                        fontWeight: '500',
                        fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',
                        fontSize: '16px',
                        fontSmoothing: 'antialiased',
                        ':-webkit-autofill': {
                            color: '#fce883',
                        },
                        '::placeholder': {
                            color: '#87BBFD',
                        },
                        },
                        invalid: {
                        iconColor: '#FFC7EE',
                        color: '#FFC7EE',
                        },
                    },
                };
                cardElement = elements.create("card", { style, hidePostalCode: true });
                cardElement.mount(cardWrapper);
            }
            var lexOrigin = 'https://training202104--fkhan.sandbox.my.site.com';
            var lwcCalled = false;
            /*** EventListener to GET response from LWC  ***/
            window.addEventListener("message", function (event) {
                if (event.origin === lexOrigin) {
                    var receivedfromLWC = event.data;
                    if(receivedfromLWC.PI_Secret){
                        lwcCalled = false;
                        confirmPayment(receivedfromLWC);
                    }
                }
            });

            async function confirmPayment(receivedfromLWC) {
                let cPay = await stripe.confirmCardPayment(receivedfromLWC.PI_Secret, {
                    payment_method: {
                        card: cardElement,
                        billing_details: receivedfromLWC.billing_details,
                    }, setup_future_usage: true ? 'on_session' : ''
                });
                if (cPay) {
                    if (cPay.error) {
                        showError(cPay.error.message);
                        updatePAError(receivedfromLWC.PA_Id);
                    } else {
                        hideError();
                        createToken(cPay,receivedfromLWC);
                    }
                }
            }

            function updatePAError(paId){
                firetoLWC({"paId":paId});
            }
            async function createToken(cPay,receivedfromLWC) {
                let cToken = await stripe.createToken(cardElement);
                if (cToken) {
                    if (cToken.error) {
                        showError(cPay.error.message);
                        updatePAError(receivedfromLWC.PA_Id);
                    } else {
                        if(cToken && cToken!=null && cPay && cPay != null && !lwcCalled){
                            firetoLWC({"cToken":cToken,"cPay":cPay});
                        }
                    }
                }
            }

            /*** Method to Fire Event to LWC ***/
            function firetoLWC(message) {
                if(!lwcCalled){
                    lwcCalled = true;
                    window.parent.postMessage(message, lexOrigin);
                }
            }

            function showError(msg){
                var cardAuthErrorMessageDiv = document.getElementById('cardAuthErrorMessageDiv');
                cardAuthErrorMessageDiv.style.display = 'block';
                document.getElementById('cardAuthErrorMessageId').innerHTML = msg;
            }
            function hideError(){
                var cardAuthErrorMessageDiv = document.getElementById('cardAuthErrorMessageDiv');
                cardAuthErrorMessageDiv.style.display = 'none';
                document.getElementById('cardAuthErrorMessageId').innerHTML = '';
            }

        </script>
    </head>

    <body>
        <div id="cardAuthErrorMessageDiv" style="display: none;"><span id="cardAuthErrorMessageId" style="color:red;"></span></div>
        <div class="cardWrapper"></div>
    </body>

    </html>
</apex:page>